package Paquete;

import java.util.Random;
import javax.swing.JOptionPane;

import logica.Casillas;

public class Tablero extends javax.swing.JFrame {

    //VARIABLES DE LA CLASE
    public static Casillas casillas[][]; //ARRAY DE LAS CASILLAS
    
    public static int filas; //FILAS DEL ARRAY
    
    public static int columnas; //COLUMNAS DEL ARRAY
    
    public static int minas; //MINAS DEL ARRAY
    
    public static boolean ganar; //VARIABLE QUE COMPRUEBA SI EL USUARIO GANO O NO LA PARTIDA
    
    //CONSTRUCTOR
    public Tablero() {
        
        initComponents();

        ventanaInicio(); //METODO QUE LLAMA EL EJECUTABLE INICIO
        
        this.setLocationRelativeTo(null); //METODO QUE ESTABLECE AL EJECUTABLE EN EL CENTRO DE LA PANTALLA
        
        iniciarJuego(); //METODO QUE INICIA EL JUEGO
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDesktopPane1 = new javax.swing.JDesktopPane();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jSpinner1 = new javax.swing.JSpinner();
        jSpinner2 = new javax.swing.JSpinner();
        jSpinner3 = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Iniciar");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jSpinner1.setModel(new javax.swing.SpinnerNumberModel(10, 10, null, 1));

        jSpinner2.setModel(new javax.swing.SpinnerNumberModel(10, 10, null, 1));

        jSpinner3.setModel(new javax.swing.SpinnerNumberModel(10, 10, null, 1));

        jLabel1.setText("Minas");

        jLabel2.setText("Filas");

        jLabel3.setText("Columnas");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(259, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(361, 361, 361))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(jSpinner3, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(201, 201, 201))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSpinner3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addContainerGap(47, Short.MAX_VALUE))
        );

        jPanel2.setLayout(new java.awt.GridLayout(10, 10));

        jDesktopPane1.setLayer(jPanel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jPanel2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    //BOTON INICIAR
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        //METODO QUE PERMITE MODIFICAR EL NUMERO FILAS Y COLUMNAS, SEGUN SEA LA ESCOGENCIA DE LA MISMA EN EL TABLERO 
        jPanel2.setLayout(new java.awt.GridLayout((int) jSpinner1.getValue(), (int) jSpinner3.getValue()));
        
        for (int i = 0; i < filas; i++) {
        
            for (int j = 0; j < columnas; j++) {
                
                jPanel2.remove(casillas[i][j]);
            }
        }
        
        //PERMITE ACTUALIZAR EL TABLERO
        jPanel2.updateUI();

        //METODO PARA INICIAR EL JUEGO
        iniciarJuego();
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_jButton1MouseClicked

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tablero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tablero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tablero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tablero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tablero().setVisible(true);
            }
        });
    }
    
    public void ventanaInicio(){
        
        //METODO QUE DESPLIEGA EL EJECUTABLE DE INICIO
        Inicio inicio = new Inicio();
        
        Tablero.jDesktopPane1.add(inicio);
        
        inicio.show();
        
        inicio.setVisible(true);
    }
    
    //METODO PARA INICIAR EL JUEGO
    public void iniciarJuego(){
        
        ganar = false;
        
        filas = (int) jSpinner1.getValue(); //OBTIENE EL VALOR DEL SPINNER 1 (FILAS) CUANDO SE INICIE EL JUEGO
        
        columnas = (int) jSpinner3.getValue(); //OBTIENE EL VALOR DEL SPINNER 3 (COLUMNAS) CUANDO SE INICIE EL JUEGO
        
        minas = (int) jSpinner2.getValue(); //OBTIENE EL VALOR DEL SPINNER 2 (MINAS) CUANDO SE INICIE EL JUEGO
        
        this.casillas = new Casillas[filas][columnas]; //INICIALIZANDO EL ARRAY DE LAS CASILLAS
        
        int numeroMinas[][] = generarMinas(minas);
        
        for (int i = 0; i < filas; i++) {
            
            for (int j = 0; j < columnas; j++) {
                
                this.casillas[i][j] = new Casillas(i,j);
                
                this.casillas[i][j].setTipocelda(numeroRandom());  //ASIGNACION  DEL TIPO DE CELDA AL ARRAY
                
                jPanel2.add(this.casillas[i][j]); //ASIGNACION DEL ARRAY CASILLAS AL TABLERO
            }
        }
        
        for (int i = 0; i < minas; i++) {
            
            this.casillas[numeroMinas[0][i]][numeroMinas[1][i]].setTipocelda(0); //ASIGNACION DE LAS MINAS AL ARRAY DE MINAS
        }
    }
    
    //METODO QUE GENERA EL TIPO DE CELDA
    public int numeroRandom(){
        
        Random rd = new Random();
        
        int numero = (int) (rd.nextDouble() * 2);
        
        return numero + 1;
    }
    
    //METODO QUE GENERA ALEATORIAMENTE EL NUMERO DE MINAS QUE HABRAN EN EL TABLERO, VERIFICANDO QUE EL # DE MINAS NO SEA MAYOR A EL # DE CASILLAS DEL TABLERO
    public int[][] generarMinas(int cantidad){
        
        Random rd = new Random();
        
        int b[][] = new int[2][cantidad];
        
        int cont = 0;
        
        boolean v;
        
        while(cont < cantidad){
            
            int numero1 = (int) (rd.nextDouble() * filas);
            
            int numero2 = (int) (rd.nextDouble() * columnas);
            
            v = false;
            
            for (int i = 0; i < cont; i++) {
                
                if(numero1 == b[0][i] && numero2 == b[1][i]){
                     v = true;
                }
            }
            
            if(!v){
                
                b[0][cont] = numero1;
                
                b[1][cont] = numero2;
                
                cont++;
            }
        }
        
        return b;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    public static javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JSpinner jSpinner2;
    private javax.swing.JSpinner jSpinner3;
    // End of variables declaration//GEN-END:variables
}
